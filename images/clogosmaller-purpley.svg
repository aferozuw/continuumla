<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   inkscape:version="1.0 (4035a4fb49, 2020-05-01)"
   sodipodi:docname="clogosmaller-purpley.svg"
   id="svg14"
   version="1.1"
   viewBox="0 0 87.238 23.171"
   height="87.575"
   width="329.72">
  <metadata
     id="metadata18">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <sodipodi:namedview
     inkscape:current-layer="svg14"
     inkscape:window-maximized="1"
     inkscape:window-y="41"
     inkscape:window-x="-9"
     inkscape:cy="43.787498"
     inkscape:cx="164.86"
     inkscape:zoom="3.6637147"
     showgrid="false"
     id="namedview16"
     inkscape:window-height="1361"
     inkscape:window-width="2560"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0"
     guidetolerance="10"
     gridtolerance="10"
     objecttolerance="10"
     borderopacity="1"
     bordercolor="#666666"
     pagecolor="#ffffff" />
  <defs
     id="defs4">
    <style
       id="style2">@font-face{font-family:&quot;Century Gothic&quot;;src:url(data:application/font-woff;charset=utf-8;base64,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) format(&quot;woff&quot;); font-weight:bold;font-style:normal;} @font-face{font-family:&quot;Century Gothic&quot;;src:url(data:application/font-woff;charset=utf-8;base64,) format(&quot;woff&quot;); font-weight:normal;font-style:normal;}</style>
    <meshgradient
       y="14.51075"
       x="-0.00073388219"
       gradientUnits="userSpaceOnUse"
       id="meshgradient2777"
       inkscape:collect="always">
      <meshrow
         id="meshrow2779">
        <meshpatch
           id="meshpatch2781">
          <stop
             id="stop2783"
             style="stop-color:#ffffff;stop-opacity:1"
             path="c 29.078,0  58.156,0  87.234,0" />
          <stop
             id="stop2785"
             style="stop-color:#800080;stop-opacity:1"
             path="c 0,2.81622  0,5.63245  0,8.44867" />
          <stop
             id="stop2787"
             style="stop-color:#ffffff;stop-opacity:1"
             path="c -29.078,0  -58.156,0  -87.234,0" />
          <stop
             id="stop2789"
             style="stop-color:#800080;stop-opacity:1"
             path="c 0,-2.81622  0,-5.63245  0,-8.44867" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <text
     style="fill:#4b0082;fill-opacity:1;"
     id="text8"
     y="10.795"
     x="6.322"
     xml:space="preserve"
     font-weight="bold"
     font-size="14.111"
     font-family="Century Gothic"
     text-decoration="underline"
     fill="#fff"><tspan
       style="fill:#4b0082;fill-opacity:1;"
       id="tspan6"
       rotate="0 0 0 0 0 0 0 0 0 0"
       y="10.795"
       x="6.322">Continuum</tspan></text>
  <text
     style="stroke-width:1.00012998;stroke-miterlimit:4;stroke-dasharray:none;fill:#4b0082;fill-opacity:1;"
     id="text12"
     y="21.125"
     x="-0.117"
     xml:space="preserve"
     font-size="8.819"
     font-family="Century Gothic"><tspan
       style="stroke-width:1.00012998;stroke-miterlimit:4;stroke-dasharray:none;fill:#4b0082;fill-opacity:1;"
       id="tspan10"
       y="21.125"
       x="-0.117"
       font-weight="normal"
       fill="#fff">Senior Living. Solved.</tspan></text>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
